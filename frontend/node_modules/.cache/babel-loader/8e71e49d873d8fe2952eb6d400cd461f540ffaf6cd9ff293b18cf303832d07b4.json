{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\9feb\\\\1\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not fetch events..'}\n    // throw new Response(JSON.stringify({message:  'Could not fetch events..' }), ({status: 500}))\n    throw json({\n      message: 'Could not fetch events..'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["E:/js/9feb/1/12-adv-starting-project/frontend/src/Pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventsPage() {\r\n  const {events} = useLoaderData()\r\n \r\n  \r\n  \r\n  return(\r\n    <Suspense fallback={<p style={{textAlign: 'center'}}>Loading...</p>}>\r\n  <Await resolve={events}>\r\n    {(loadedEvents)=> <EventsList events={loadedEvents}/> }\r\n\r\n  </Await></Suspense>)\r\n  \r\n}\r\n\r\nexport default EventsPage;\r\n\r\n\r\nasync function loadEvents(){\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return {isError: true, message: 'Could not fetch events..'}\r\n    // throw new Response(JSON.stringify({message:  'Could not fetch events..' }), ({status: 500}))\r\n throw json(\r\n                {message: 'Could not fetch events..'},\r\n                { status: 500})\r\n  \r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events\r\n  }\r\n}\r\n\r\nexport function loader(){\r\n\r\nreturn defer({\r\nevents: loadEvents()\r\n})\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGV,aAAa,CAAC,CAAC;EAIhC,oBACEO,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACtEP,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAIb,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAErB;AAACT,EAAA,CAZQD,UAAU;EAAA,QACAR,aAAa;AAAA;AAAAqB,EAAA,GADvBb,UAAU;AAcnB,eAAeA,UAAU;AAGzB,eAAec,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACH,MAAMxB,IAAI,CACK;MAACyB,OAAO,EAAE;IAA0B,CAAC,EACrC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;EAE7B,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACtB,IAAI,CAAC,CAAC;IACrC,OAAO2B,OAAO,CAAClB,MAAM;EACvB;AACF;AAEA,OAAO,SAASmB,MAAMA,CAAA,EAAE;EAExB,OAAO3B,KAAK,CAAC;IACbQ,MAAM,EAAEY,UAAU,CAAC;EACnB,CAAC,CAAC;AACF;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}